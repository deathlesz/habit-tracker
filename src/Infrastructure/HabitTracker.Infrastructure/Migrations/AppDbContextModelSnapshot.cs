// <auto-generated />
using System;
using HabitTracker.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HabitTracker.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.19");

            modelBuilder.Entity("HabitTracker.Domain.Entities.HabitEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Color")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("HabitRegularityType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Icon")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kind")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PartOfTheDay")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Habits");
                });

            modelBuilder.Entity("HabitTracker.Domain.Entities.HabitReminderEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CyclePatternLength")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CyclesToRun")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DaysToNotificate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("HabitReminders");
                });

            modelBuilder.Entity("HabitTracker.Domain.Entities.Regularity.HabitScheduleEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CycleMachedDaysGoal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CycleStart")
                        .HasColumnType("TEXT");

                    b.Property<string>("DatesMatched")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DaysMachedInCycle")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAllMachedDays")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAnyDay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RepeatingCycleDays")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RepeatingDatesToMatch")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("HabitSchedules");
                });

            modelBuilder.Entity("HabitTracker.Domain.Entities.HabitEntity", b =>
                {
                    b.OwnsOne("HabitTracker.Domain.Entities.GoalInfo", "Goal", b1 =>
                        {
                            b1.Property<int>("HabitEntityId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("Unit")
                                .HasColumnType("INTEGER");

                            b1.HasKey("HabitEntityId");

                            b1.ToTable("Habits");

                            b1.WithOwner()
                                .HasForeignKey("HabitEntityId");
                        });

                    b.Navigation("Goal")
                        .IsRequired();
                });

            modelBuilder.Entity("HabitTracker.Domain.Entities.HabitReminderEntity", b =>
                {
                    b.HasOne("HabitTracker.Domain.Entities.HabitEntity", null)
                        .WithOne("Reminder")
                        .HasForeignKey("HabitTracker.Domain.Entities.HabitReminderEntity", "Id");
                });

            modelBuilder.Entity("HabitTracker.Domain.Entities.Regularity.HabitScheduleEntity", b =>
                {
                    b.HasOne("HabitTracker.Domain.Entities.HabitEntity", null)
                        .WithOne("Regularity")
                        .HasForeignKey("HabitTracker.Domain.Entities.Regularity.HabitScheduleEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HabitTracker.Domain.Entities.HabitEntity", b =>
                {
                    b.Navigation("Regularity")
                        .IsRequired();

                    b.Navigation("Reminder");
                });
#pragma warning restore 612, 618
        }
    }
}
